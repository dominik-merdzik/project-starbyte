# This file is for GitHub Actions
# It will automatically build our project for Linux, macOS, and Windows when we push to the `main` branch
# See the `Actions` tab on the GitHub repo

name: Build cross-platform Go project

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            GOOS: linux
            GOARCH: amd64
          - os: macos-latest
            GOOS: darwin
            GOARCH: arm64
          - os: windows-latest
            GOOS: windows
            GOARCH: amd64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "stable" # Use latest stable version (see here https://github.com/actions/go-versions/blob/main/versions-manifest.json)

      # Basically runs `go build {operating system} {architecture}`
      # For the Windows build, we need to specify ".exe"
      - name: Build
        run: |
          if [ "${{ matrix.GOOS }}" = "windows" ]; then
            GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go build -o build/${{ matrix.GOOS }}_${{ matrix.GOARCH }}/project-starbyte.exe cmd/project-starbyte/main.go
          else
            GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go build -o build/${{ matrix.GOOS }}_${{ matrix.GOARCH }}/project-starbyte cmd/project-starbyte/main.go
          fi
          
      # Upload the artifact on GitHub, so we can download the executables
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-starbyte-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          path: |
            build/${{ matrix.GOOS }}_${{ matrix.GOARCH }}/project-starbyte
            build/${{ matrix.GOOS }}_${{ matrix.GOARCH }}/project-starbyte.exe

      # I don't think we're gonna be running tests
      #- name: Test
      #  run: go test -v ./...
