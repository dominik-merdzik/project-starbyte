name: Build cross-platform Go project

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION: "1.0.0-beta" # Remember to bump the version number before release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        include:
          - os: ubuntu-latest
            GOOS: linux
          - os: macos-latest
            GOOS: darwin
          - os: windows-latest
            GOOS: windows

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "stable"

      - name: Create build directory
        run: mkdir -p build/${{ matrix.GOOS }}_${{ matrix.arch }}

      - name: Build
        run: |
          if [ "${{ matrix.GOOS }}" = "windows" ]; then
            GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.arch }} go build -o build/${{ matrix.GOOS }}_${{ matrix.arch }}/project-starbyte.exe cmd/project-starbyte/main.go
          else
            GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.arch }} go build -o build/${{ matrix.GOOS }}_${{ matrix.arch }}/project-starbyte cmd/project-starbyte/main.go
          fi

      - name: Set architecture display name
        id: arch-name
        run: |
          if [ "${{ matrix.arch }}" = "amd64" ]; then
            echo "ARCH_NAME=x64" >> $GITHUB_ENV
          else
            echo "ARCH_NAME=arm64" >> $GITHUB_ENV
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-starbyte-${{ env.VERSION }}-${{ matrix.GOOS }}-${{ env.ARCH_NAME }}
          path: |
            build/${{ matrix.GOOS }}_${{ matrix.arch }}/project-starbyte
            build/${{ matrix.GOOS }}_${{ matrix.arch }}/project-starbyte.exe
